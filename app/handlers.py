import app.keyboards as markup
import os
import shutil
from pathlib import Path

from utils.logger import logger
from utils import xui
from utils import sqlite as db
from utils import utils as utils
from config import MESSAGES

from aiogram import F, Router, Bot
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, FSInputFile

router_main = Router()

@router_main.message(Command('start'))
async def start (message: Message, bot: Bot):
    try:
        await message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup.start)

        try:
            await db.create_db()
            await db.reg_user(message.chat.id)
        except:
            pass

        # await bot.send_message(
            # chat_id=1616183086,
            # text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} | @{message.from_user.username} | {message.chat.id} –æ—Ç–∫—Ä—ã–ª –±–æ—Ç–∞')
    except Exception as e:
        logger.error(e)

@router_main.callback_query(lambda c: "profile" in c.data)
async def profile(callback: CallbackQuery, bot: Bot):
    try:
        client = xui.get_user_data(str(callback.message.chat.id))
        logger.debug(client)

        if not client or not client["PC"]["enable"]:
            await callback.message.edit_text(
                text="–ü–æ—Ö–æ–∂–µ, –í—ã –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –Ω–∞—à–µ–º—É VPN –∏–ª–∏ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥",
                reply_markup=markup.pay_vpn)

        msg_pc = (
            f"<b>   PC\n</b>"
            f"üí°–ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ –î–∞' if client["PC"]['enable'] else 'üî¥ –ù–µ—Ç'}\n"
            f"üåê –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {'üü¢ –û–Ω–ª–∞–π–Ω' if client["PC"]['online'] else 'üî¥ –û—Ñ–ª–∞–π–Ω'}\n"
            f"üîº –ó–∞–≥—Ä—É–∑–∫–∞: {client["PC"]["up"]}\nüîΩ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {client["PC"]["down"]}\n"
            f"üìÖ –û–∫–æ–Ω—á–∞–Ω–∏–µ —á–µ—Ä–µ–∑: {client["PC"]["expiryTime"]}\n\n"
        ) if client["PC"] else ""

        msg_android = (
            f"<b>   Andoid\n</b>"
            f"üí°–ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ –î–∞' if client["Android"]['enable'] else 'üî¥ –ù–µ—Ç'}\n"
            f"üåê –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {'üü¢ –û–Ω–ª–∞–π–Ω' if client["Android"]['online'] else 'üî¥ –û—Ñ–ª–∞–π–Ω'}\n"
            f"üîº –ó–∞–≥—Ä—É–∑–∫–∞: {client["Android"]["up"]}\nüîΩ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {client["Android"]["down"]}\n"
            f"üìÖ –û–∫–æ–Ω—á–∞–Ω–∏–µ —á–µ—Ä–µ–∑: {client["Android"]["expiryTime"]}\n\n"
        ) if client["Android"] else ""

        msg_ios = (
            f"<b>   IOS\n</b>"
            f"üí°–ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ –î–∞' if client["IOS"]['enable'] else 'üî¥ –ù–µ—Ç'}\n"
            f"üåê –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {'üü¢ –û–Ω–ª–∞–π–Ω' if client["IOS"]['online'] else 'üî¥ –û—Ñ–ª–∞–π–Ω'}\n"
            f"üîº –ó–∞–≥—Ä—É–∑–∫–∞: {client["IOS"]["up"]}\nüîΩ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {client["IOS"]["down"]}\n"
            f"üìÖ –û–∫–æ–Ω—á–∞–Ω–∏–µ —á–µ—Ä–µ–∑: {client["IOS"]["expiryTime"]}\n\n"
        ) if client["IOS"] else ""

        msg = f"–í–∞—à–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n\n{msg_pc + msg_android + msg_ios}"

        await callback.message.edit_text(
            text=msg,
            reply_markup=markup.to_main,
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(e, exc_info=True)

@router_main.callback_query(lambda c: "return" in c.data)
async def return_to(callback: CallbackQuery, bot: Bot):
    try:
        if "main" in callback.data:
            await callback.message.edit_text(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup.start)

        elif "platforms" in callback.data:
            await callback.message.edit_text(text='–ù–∞ –∫–∞–∫—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VPN?', reply_markup=markup.platforms)

    except Exception as e:
        logger.error(e)

@router_main.callback_query(lambda c: "install" in c.data)
async def install_vpn(callback: CallbackQuery, bot: Bot):

    chat_id = str(callback.message.chat.id)

    if "vpn" in callback.data:
        try:

            user_paid = await db.get_user_data(chat_id, ["paid"])

            if not user_paid[0]:
                await callback.message.edit_text(
                    text="–í—ã –µ—â–µ –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–æ—Å—Ç—É–ø –∫ VPN –∏–ª–∏ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞",
                    reply_markup=markup.pay_vpn
                )
                return

            await callback.message.edit_text(
                text="–ù–∞ –∫–∞–∫—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VPN?",
                reply_markup=markup.platforms)
        except Exception as e:
            logger.error(e)

    elif "pc" in callback.data:
        try:
            xui_data = xui.get_user_data(chat_id)
            access_key = xui_data["PC"]["id"]
            msg = "–° –ø–æ—Ä—è–¥–æ–∫–æ–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ:\n" \
                    "https://teletype.in/@kn1ver/install-pc \n\n" \
                    f"–í–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞: <code>{access_key}</code>\n\n –ê—Ä—Ö–∏–≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ‚ñØ"

            msg_id = await callback.message.edit_text(
                text=msg,
                reply_markup=markup.to_platforms,
                parse_mode="HTML")

            archive, dll, dst, archive_path = await utils.get_archive(chat_id, bot, int(msg_id.message_id), access_key)
            launcher = FSInputFile("files/first_launch.exe")

            await callback.message.answer_document(launcher)
            await callback.message.answer_document(archive)
            msg = msg[:-10] + "‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñØ‚ñØ‚ñØ"
            await callback.message.edit_text(text=msg, parse_mode="HTML")

            await callback.message.answer_document(dll)
            msg = msg[:-10] + "‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ‚ñÆ"
            await callback.message.edit_text(text=msg, parse_mode="HTML", reply_markup=markup.to_platforms)

            logger.debug("–ê—Ä—Ö–∏–≤—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")

            shutil.rmtree(dst, ignore_errors=True)
            if archive_path.exists():
                os.remove(archive_path)
            logger.debug("–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã —É–¥–∞–ª–µ–Ω—ã")


        except Exception as e:
            logger.error(e, exc_info=True)

    elif "android" in callback.data:
        try:

            user_config = await utils.get_link(chat_id, "Android")

            routing_rules = '[{"enabled":true,"ip":["geoip:ru"],"looked":false,"outboundTag":"direct","remarks":"geoip direct"},{"domain":["geosite:category-gov-ru","geosite:yandex","geosite:vk","regexp:xn--"],"enabled":true,"looked":false,"outboundTag":"direct","remarks":"geosite direct"},{"domain":["geosite:category-ads-all"],"enabled":true,"looked":false,"outboundTag":"block","remarks":"ads block"},{"enabled":true,"ip":["geoip:private"],"looked":false,"outboundTag":"direct","remarks":"geoip private"},{"domain":["geosite:private"],"enabled":true,"looked":false,"outboundTag":"direct","remarks":"geosite private"}]'

            await callback.message.answer(
                text="–ü–æ—Ä—è–¥–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN –Ω–∞ android:\n\n"
                "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É: https://drive.google.com/file/d/1MsrZp13yQUGQHRZIAJHYU6CdSQIwffel/view?usp=sharing \n" \
                "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª <u>v2rayNG_1.10.23.apk</u> —Å –¥–∏—Å–∫–∞\n" \
                "3. –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n" \
                "4. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –æ—Ç—Å—é–¥–∞: https://teletype.in/@kn1ver/Android-install \n\n" \
                "–†–µ—Å—É—Ä—Å—ã:\n" \
                f"<u>–ö–æ–Ω—Ñ–∏–≥</u>:\n <code>{user_config}</code>\n\n"
                f"<u>–ü—Ä–∞–≤–∏–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏</u>:\n <code>{routing_rules}</code>",
                parse_mode="HTML"
            )

        except Exception as e:
            logger.error(e, exc_info=True)

    elif "ios" in callback.data:
        try:

            user_config = await utils.get_link(chat_id, "IOS")

            routing_rules = 'v2box://routes?multi=W3siZW5hYmxlZCI6dHJ1ZSwiaXAiOlsiZ2VvaXA6cnUiXSwibG9ja2VkIjpmYWxzZSwib3V0Ym91bmRUYWciOiJkaXJlY3QiLCJyZW1hcmtzIjoiZ2VvaXAgZGlyZWN0In0seyJkb21haW4iOlsiZ2Vvc2l0ZTpjYXRlZ29yeS1nb3YtcnUiLCJnZW9zaXRlOnlhbmRleCIsImdlb3NpdGU6dmsiLCJyZWdleHA6eG4tLSJdLCJlbmFibGVkIjp0cnVlLCJsb2NrZWQiOmZhbHNlLCJvdXRib3VuZFRhZyI6ImRpcmVjdCIsInJlbWFya3MiOiJnZW9zaXRlIGRpcmVjdCJ9LHsiZG9tYWluIjpbImdlb3NpdGU6Y2F0ZWdvcnktYWRzLWFsbCJdLCJlbmFibGVkIjp0cnVlLCJsb2NrZWQiOmZhbHNlLCJvdXRib3VuZFRhZyI6ImJsb2NrIiwicmVtYXJrcyI6ImFkcyBibG9jayJ9LHsiZW5hYmxlZCI6dHJ1ZSwiaXAiOlsiZ2VvaXA6cHJpdmF0ZSJdLCJsb2NrZWQiOmZhbHNlLCJvdXRib3VuZFRhZyI6ImRpcmVjdCIsInJlbWFya3MiOiJnZW9pcCBwcml2YXRlIn0seyJkb21haW4iOlsiZ2Vvc2l0ZTpwcml2YXRlIl0sImVuYWJsZWQiOnRydWUsImxvY2tlZCI6ZmFsc2UsIm91dGJvdW5kVGFnIjoiZGlyZWN0IiwicmVtYXJrcyI6Imdlb3NpdGUgcHJpdmF0ZSJ9XQ=='

            await callback.message.answer(
                text="–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN\n–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –æ—Ç—Å—é–¥–∞: https://teletype.in/@kn1ver/install-ios \n\n" \
                "–†–µ—Å—É—Ä—Å—ã:\n" \
                f"<u>–ö–æ–Ω—Ñ–∏–≥</u>:\n <code>{user_config}</code>\n\n"
                f"<u>–ü—Ä–∞–≤–∏–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏</u>:\n <code>{routing_rules}</code>",
                parse_mode="HTML"
            )

        except Exception as e:
            logger.error(e, exc_info=True)
